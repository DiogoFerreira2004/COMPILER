ArraysAndVarargs {




.construct ArraysAndVarargs().V {
    invokespecial(this, "<init>").V;
}

.method public processArray("array".array.i32).i32 {
   while0:
tmp0.i32 :=.i32 arraylength("array".array.i32).i32;
tmp1.bool :=.bool i.i32 <.bool tmp0.i32;
if (!.bool tmp1.bool) goto endif0;
tmp2.i32 :=.i32 "array".array.i32[i.i32].i32;
tmp3.i32 :=.i32 sum.i32 +.i32 tmp2.i32;
sum.i32 :=.i32 tmp3.i32;
i.i32 :=.i32 i.i32 +.i32 1.i32;

goto while0;
endif0:

   ret.i32 sum.i32;
}

.method public varargs processVarargs(values.array.i32).i32 {
   tmp5.i32 :=.i32 invokevirtual(this.ArraysAndVarargs, "processArray", values.array.i32).i32;
ret.i32 tmp5.i32;
}

.method public test().i32 {
   arr[0.i32].i32 :=.i32 1.i32;

   arr[1.i32].i32 :=.i32 2.i32;

   arr[2.i32].i32 :=.i32 3.i32;

   tmp6.array.i32 :=.array.i32 new(array, 3.i32).array.i32;
tmp6[0.i32].i32 :=.i32 10.i32;
tmp6[1.i32].i32 :=.i32 20.i32;
tmp6[2.i32].i32 :=.i32 30.i32;
tmp7.i32 :=.i32 invokevirtual(this.ArraysAndVarargs, "processVarargs", tmp6.array.i32).i32;
tmp8.i32 :=.i32 invokevirtual(this.ArraysAndVarargs, "processArray", arr.array.i32).i32;
tmp9.i32 :=.i32 tmp7.i32 +.i32 tmp8.i32;
ret.i32 tmp9.i32;
}

.method public static main(args.array.String).V {
   ret.V ;
}

}